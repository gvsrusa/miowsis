server:
  port: 8081

spring:
  application:
    name: user-service
  cloud:
    config:
      enabled: false
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/miowsis_users}
    username: ${DATABASE_USERNAME:miowsis_user}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  flyway:
    enabled: true
    baseline-on-migrate: true
  kafka:
    # Disable Kafka for testing when Kafka is not available
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      # Add timeout and retry settings to fail fast
      properties:
        request.timeout.ms: 1000
        delivery.timeout.ms: 2000
        retries: 0
        max.block.ms: 1000
    consumer:
      group-id: user-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.miowsis.*"

eureka:
  client:
    enabled: false
    register-with-eureka: false
    fetch-registry: false

jwt:
  secret: ${JWT_SECRET:your-secret-key-here-change-in-production}
  expiration: ${JWT_EXPIRATION:86400000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.miowsis: DEBUG
    org.springframework.security: DEBUG

# Disable Kafka for testing
miowsis:
  email:
    kafka:
      enabled: false
  events:
    kafka:
      enabled: false