server:
  port: 8083

spring:
  application:
    name: esg-service
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/miowsis_esg}
    username: ${DATABASE_USERNAME:miowsis_user}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://admin:password@localhost:27017/miowsis_esg?authSource=admin}
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  flyway:
    enabled: true
    baseline-on-migrate: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: esg-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.miowsis.*"
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
  cache:
    type: redis
    redis:
      time-to-live: 600000 # 10 minutes

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true

# ESG Data Provider Configuration
esg:
  data-provider:
    api-key: ${ESG_API_KEY:your-api-key}
    api-url: ${ESG_API_URL:https://api.esgprovider.com}
    cache-duration: 86400000 # 24 hours

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.miowsis: DEBUG